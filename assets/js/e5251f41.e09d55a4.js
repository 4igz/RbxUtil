"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[291],{42202:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new mouse input capturer.\\n\\n```lua\\nlocal mouse = Mouse.new()\\n```","params":[],"returns":[{"desc":"","lua_type":"Mouse"}],"function_type":"static","source":{"line":88,"path":"modules/input/Mouse.lua"}},{"name":"IsLeftDown","desc":"","params":[],"returns":[{"desc":"","lua_type":"isLeftDown: boolean"}],"function_type":"method","source":{"line":133,"path":"modules/input/Mouse.lua"}},{"name":"IsRightDown","desc":"","params":[],"returns":[{"desc":"","lua_type":"isRightDown: boolean"}],"function_type":"method","source":{"line":141,"path":"modules/input/Mouse.lua"}},{"name":"GetPosition","desc":"Gets the 2D mouse position on the screen.","params":[],"returns":[{"desc":"","lua_type":"screenPosition: Vector2"}],"function_type":"method","source":{"line":151,"path":"modules/input/Mouse.lua"}},{"name":"GetDelta","desc":":::info Only When Mouse Locked\\nGetting the mouse delta is only intended for when the mouse is locked. If the\\nmouse is _not_ locked, this will return a zero Vector2. The mouse can be locked\\nusing the `mouse:Lock()` and `mouse:LockCenter()` method.","params":[],"returns":[{"desc":"","lua_type":"deltaScreenPosition: Vector2"}],"function_type":"method","source":{"line":164,"path":"modules/input/Mouse.lua"}},{"name":"GetRay","desc":"Returns the viewport point ray for the mouse at the current mouse\\nposition (or the override position if provided).","params":[{"name":"overridePos","desc":"","lua_type":"Vector2?"}],"returns":[{"desc":"","lua_type":"viewportMouseRay: Ray"}],"function_type":"method","source":{"line":176,"path":"modules/input/Mouse.lua"}},{"name":"Raycast","desc":"Performs a raycast operation out from the mouse position (or the\\n`overridePos` if provided) into world space. The ray will go\\n`distance` studs forward (or 1000 studs if not provided).\\n\\nReturns the `RaycastResult` if something was hit, else returns `nil`.","params":[{"name":"raycastParams","desc":"","lua_type":"RaycastParams"},{"name":"distance","desc":"","lua_type":"number?"},{"name":"overridePos","desc":"","lua_type":"Vector2?"}],"returns":[{"desc":"","lua_type":"result: RaycastResult?"}],"function_type":"method","source":{"line":195,"path":"modules/input/Mouse.lua"}},{"name":"Lock","desc":"Locks the mouse in its current position on screen. Call `mouse:Unlock()`\\nto unlock the mouse.\\n\\n:::caution Must explicitly unlock\\nBe sure to explicitly call `mouse:Unlock()` before cleaning up the mouse.\\nThe `Destroy` method does _not_ unlock the mouse since there is no way\\nto guarantee who \\"owns\\" the mouse lock.","params":[],"returns":[],"function_type":"method","source":{"line":211,"path":"modules/input/Mouse.lua"}},{"name":"LockCenter","desc":"Locks the mouse in the center of the screen. Call `mouse:Unlock()`\\nto unlock the mouse.\\n\\n:::caution Must explicitly unlock\\nSee cautionary in `Lock` method above.","params":[],"returns":[],"function_type":"method","source":{"line":223,"path":"modules/input/Mouse.lua"}},{"name":"Unlock","desc":"Unlocks the mouse.","params":[],"returns":[],"function_type":"method","source":{"line":231,"path":"modules/input/Mouse.lua"}},{"name":"Destroy","desc":"Destroys the mouse.","params":[],"returns":[],"function_type":"method","source":{"line":239,"path":"modules/input/Mouse.lua"}}],"properties":[{"name":"LeftDown","desc":"","lua_type":"Signal","tags":["Event"],"source":{"line":54,"path":"modules/input/Mouse.lua"}},{"name":"LeftUp","desc":"","lua_type":"Signal","tags":["Event"],"source":{"line":59,"path":"modules/input/Mouse.lua"}},{"name":"RightDown","desc":"","lua_type":"Signal","tags":["Event"],"source":{"line":64,"path":"modules/input/Mouse.lua"}},{"name":"RightUp","desc":"","lua_type":"Signal","tags":["Event"],"source":{"line":69,"path":"modules/input/Mouse.lua"}},{"name":"Scrolled","desc":"```lua\\nmouse.Scrolled:Connect(function(scrollAmount) ... end)\\n```","lua_type":"Signal<number>","tags":["Event"],"source":{"line":77,"path":"modules/input/Mouse.lua"}}],"types":[],"name":"Mouse","desc":"The Mouse class is part of the Input package.\\n\\n```lua\\nlocal Mouse = require(packages.Input).Mouse\\n```","realm":["Client"],"source":{"line":46,"path":"modules/input/Mouse.lua"}}')}}]);