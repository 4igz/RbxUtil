"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[475],{66827:function(e){e.exports=JSON.parse('{"functions":[{"name":"Is","desc":"Returns `true` if `object` is a ClientRemoteSignal.","params":[{"name":"object","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":84,"path":"packages/remote/ClientRemoteSignal.lua"}},{"name":"new","desc":"Constructs a ClientRemoteSignal which wraps a RemoteEvent instance.","params":[{"name":"remoteEvent","desc":"","lua_type":"RemoteEvent"}],"returns":[{"desc":"","lua_type":"ClientRemoteSignal"}],"function_type":"static","source":{"line":94,"path":"packages/remote/ClientRemoteSignal.lua"}},{"name":"Fire","desc":"Fires the given arguments to the server.","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":110,"path":"packages/remote/ClientRemoteSignal.lua"}},{"name":"Wait","desc":"Waits for the server to fire the signal and returns all the arguments passed.","params":[],"returns":[{"desc":"","lua_type":"...: any"}],"function_type":"method","yields":true,"source":{"line":120,"path":"packages/remote/ClientRemoteSignal.lua"}},{"name":"Connect","desc":"Connects a function to the signal. The function will be called anytime the\\nserver fires the signal.","params":[{"name":"handler","desc":"","lua_type":"(...: any) -> nil"}],"returns":[{"desc":"","lua_type":"Connection"}],"function_type":"method","source":{"line":131,"path":"packages/remote/ClientRemoteSignal.lua"}},{"name":"Destroy","desc":"Destroys the ClientRemoteSignal.","params":[],"returns":[],"function_type":"method","source":{"line":143,"path":"packages/remote/ClientRemoteSignal.lua"}}],"properties":[],"types":[],"name":"ClientRemoteSignal","desc":"Represents a RemoteSignal on the client.\\n```lua\\nlocal ClientRemoteSignal = require(packages.Remote).ClientRemoteSignal\\n```","realm":["Client"],"source":{"line":75,"path":"packages/remote/ClientRemoteSignal.lua"}}')}}]);