"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[58],{10693:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new symbol","params":[{"name":"id","desc":"Identifier for the symbol (usually a string)","lua_type":"any"},{"name":"scope","desc":"Optional symbol scope","lua_type":"Symbol?"}],"returns":[{"desc":"Returns `true` if the `obj` parameter is a Symbol","lua_type":"boolean"}],"function_type":"static","source":{"line":35,"path":"packages/symbol/init.lua"}},{"name":"Is","desc":"Checks if the given object is a Symbol.","params":[{"name":"obj","desc":"Anything","lua_type":"any"}],"returns":[{"desc":"Returns `true` if the `obj` parameter is a Symbol","lua_type":"boolean"}],"function_type":"static","source":{"line":55,"path":"packages/symbol/init.lua"}},{"name":"IsInScope","desc":"Checks if the given object is a Symbol an in the given scope","params":[{"name":"obj","desc":"Anything","lua_type":"any"},{"name":"scope","desc":"Scope symbol","lua_type":"Symbol"}],"returns":[{"desc":"Returns `true` if the `obj` parameter is a Symbol and in the given scope","lua_type":"boolean"}],"function_type":"static","source":{"line":68,"path":"packages/symbol/init.lua"}}],"properties":[],"types":[],"name":"Symbol","desc":"Symbols are simply unique objects that can be used as unique identifiers.","source":{"line":25,"path":"packages/symbol/init.lua"}}')}}]);