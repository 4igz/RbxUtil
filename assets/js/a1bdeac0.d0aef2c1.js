"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[482],{80311:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a Trove object.","params":[],"returns":[],"function_type":"static","source":{"line":46,"path":"modules/trove/init.lua"}},{"name":"Construct","desc":"Calls the `new` constructor function on the given table,\\nadds the constructed object to the trove, and then\\nreturns the constructed object.","params":[{"name":"class","desc":"","lua_type":"table"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"any"}],"function_type":"method","source":{"line":61,"path":"modules/trove/init.lua"}},{"name":"Connect","desc":"Connects the function to the signal, adds the connection\\nto the trove, and then returns the connection.","params":[{"name":"signal","desc":"","lua_type":"RBXScriptSignal"},{"name":"fn","desc":"","lua_type":"(...: any) -> any"}],"returns":[{"desc":"","lua_type":"RBXScriptConnection"}],"function_type":"method","source":{"line":74,"path":"modules/trove/init.lua"}},{"name":"BindToRenderStep","desc":"Calls `RunService:BindToRenderStep` and registers a function in the\\ntrove that will call `RunService:UnbindFromRenderStep` on cleanup.","params":[{"name":"name","desc":"","lua_type":"string"},{"name":"priority","desc":"","lua_type":"number"},{"name":"fn","desc":"","lua_type":"(dt: number) -> nil"}],"returns":[],"function_type":"method","source":{"line":86,"path":"modules/trove/init.lua"}},{"name":"Add","desc":"Adds an object to the trove. Once the trove is cleaned or\\ndestroyed, the object will also be cleaned up.","params":[{"name":"object","desc":"Object to track","lua_type":"any"},{"name":"cleanupMethod","desc":"Optional cleanup name override","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"object: any"}],"function_type":"method","source":{"line":101,"path":"modules/trove/init.lua"}},{"name":"Remove","desc":"Removes the object from the Trove and cleans it up.","params":[{"name":"object","desc":"Object to remove","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":112,"path":"modules/trove/init.lua"}},{"name":"Clean","desc":"Cleans up all objects in the trove.","params":[],"returns":[],"function_type":"method","source":{"line":130,"path":"modules/trove/init.lua"}},{"name":"AttachToInstance","desc":"Attaches the trove to a Roblox instance. Once this\\ninstance is removed from the game (parent or ancestor\'s\\nparent set to `nil`), the trove will automatically\\nclean up.\\n\\n:::caution\\nWill throw an error if `instance` is not a descendant\\nof the game hierarchy.\\n:::","params":[{"name":"instance","desc":"","lua_type":"Instance"}],"returns":[{"desc":"","lua_type":"RBXScriptConnection"}],"function_type":"method","source":{"line":160,"path":"modules/trove/init.lua"}},{"name":"Destroy","desc":"Destroys the Trove object. Forces `Clean` to run.","params":[],"returns":[],"function_type":"method","source":{"line":173,"path":"modules/trove/init.lua"}}],"properties":[],"types":[],"name":"Trove","desc":"A Trove is helpful for tracking any sort of object during\\nruntime that needs to get cleaned up at some point.","source":{"line":39,"path":"modules/trove/init.lua"}}')}}]);